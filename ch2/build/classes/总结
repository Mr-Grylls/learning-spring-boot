bean的作用域（scope）：
	1、singleton在spring中只有一个bean实例，
	2、prototype在spring容器每次获取prototype定义bean，容器都创建一个新的bean的实例
	3、request在一次http请求中容器将返回一个bean实例，不同的http请求返回不同的bean实例，仅在web spring应用程序上下文中使用
	4、session在一个httpsession，容器将返回同一个bean实例，仅在web spring应用程序上下文中使用
	5、application为每一个servletcontext对象创建一个实例，即同一个应用共享一个bean实例,仅在web spring应用程序上下文中使用
	6、websocket为每一个websocket对象创建一个bean实例，仅在web spring应用程序上下文中使用

bean的生命周期：
	1、根据bean的配置情况实例化一个bean
	2、根据Spring上下文对实例化的bean进行依赖注入，即对bean的属性初始化
	3、如果bean实现了BeanNameAware接口，将调用它实现setBeanName(String beanId)方法，此处参数传递的是spring配置文件中bean的id
	4、如果bean实现了BeanFactoryAware接口，将调用它实现的setBeanFactory方法，此处参数传递的是当前spring工厂实例的引用
	5、如果bean实现了ApplicationContextAware接口，将调用它实现的setApplicationContext(ApplicationContext)方法，此处参数传递的是Spring上下文实例的引用。
	6、如果bean关联了BeanPostProcessor接口，将调用初始化方法postProcessBeforeInitialization(Object obj,String s)对bean进行操作
	7、如果bean实现了InitializingBean接口，将调用afterPropertiesSet方法
	8、如果bean在spring配置文件中配置了init-method属性，将自动调用其配置的初始化方法
	9、如果bean关联了BeanPostProcessor接口，将调用postProcessAfterInitialization(Object obj,String s)方法，由于是在bean初始化结束时调用after方法，也可用于内存或缓存技术
	10、当bean不再需要时将进入销毁阶段，如果bean实现了DisposableBean接口，则调用其实现的destroy方法将spring中的bean销毁
	11、如果在配置文件中通过destroy-method属性指定了bean的销毁方法。将调用其配置的销毁方法进行销毁
	
bean的装配方式：
	1、基于XML配置的装配：使用构造方法注入和使用属性的setter方法注入
	2、基于注解方式装配：@Component()、@Resource、@Repository、@Service、@Controller、@Autowired、@Qualifier(与@Autowired配合使用)