<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xust.mapper.AdjustSalaryMapper" >
    <resultMap id="BaseResultMap" type="com.xust.model.AdjustSalary">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="eid" property="eid" jdbcType="INTEGER"/>
        <result column="asDate" property="asdate" jdbcType="DATE"/>
        <result column="beforeSalary" property="beforesalary" jdbcType="INTEGER"/>
        <result column="afterSalary" property="aftersalary" jdbcType="INTEGER"/>
        <result column="reason" property="reason" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
      id,eid,asDate,beforeSalary,afterSalary,reason,remark
    </sql>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from adjustsalary
        where id = #{id}
    </delete>

    <insert id="insert" parameterType="com.xust.model.AdjustSalary">
        insert into adjustsalary(id,eid,asDate,beforeSalary,afterSalary,reason,remark)
        values (#{id},#{eid},#{asDate},#{beforeSalary},#{afterSalary},#{reason},#{remark})
    </insert>

    <insert id="insertSelective" parameterType="com.xust.model.AdjustSalary">
        insert into adjustsalary
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="eid != null" >
                eid,
            </if>
            <if test="asdate != null" >
                asDate,
            </if>
            <if test="beforesalary != null" >
                beforeSalary,
            </if>
            <if test="aftersalary != null" >
                afterSalary,
            </if>
            <if test="reason != null" >
                reason,
            </if>
            <if test="remark != null" >
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="eid != null" >
                #{eid,jdbcType=INTEGER},
            </if>
            <if test="asdate != null" >
                #{asdate,jdbcType=DATE},
            </if>
            <if test="beforesalary != null" >
                #{beforesalary,jdbcType=INTEGER},
            </if>
            <if test="aftersalary != null" >
                #{aftersalary,jdbcType=INTEGER},
            </if>
            <if test="reason != null" >
                #{reason,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from adjustsalary
        where id = #{id}
    </select>

    <update id="updateById" parameterType="com.xust.model.AdjustSalary">
        update adjustsalary
        set eid = #{eid,jdbcType=INTEGER},
          asDate = #{asdate,jdbcType=DATE},
          beforeSalary = #{beforesalary,jdbcType=INTEGER},
          afterSalary = #{aftersalary,jdbcType=INTEGER},
          reason = #{reason,jdbcType=VARCHAR},
          remark = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByIdSelective" parameterType="com.xust.model.AdjustSalary">
        update adjustsalary
        <set >
            <if test="eid != null" >
                eid = #{eid,jdbcType=INTEGER},
            </if>
            <if test="asdate != null" >
                asDate = #{asdate,jdbcType=DATE},
            </if>
            <if test="beforesalary != null" >
                beforeSalary = #{beforesalary,jdbcType=INTEGER},
            </if>
            <if test="aftersalary != null" >
                afterSalary = #{aftersalary,jdbcType=INTEGER},
            </if>
            <if test="reason != null" >
                reason = #{reason,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>