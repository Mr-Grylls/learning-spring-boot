<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xust.mapper.DepartmentMapper" >
    <resultMap id="BaseResultMap" type="com.xust.model.Department">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="parentId" property="parentId" jdbcType="INTEGER"/>
        <result column="deptPath" property="deptPath" jdbcType="VARCHAR"/>
        <result column="enabled" property="enabled" jdbcType="BIT"/>
        <result column="isparent" property="isParent" jdbcType="BIT"/>
    </resultMap>

    <resultMap id="DepartmentWithChildren" type="com.xust.model.Department" extends="BaseResultMap">
        <collection property="children" ofType="com.xust.model.Department"
                    select="com.xust.mapper.DepartmentMapper.getAllDepartmentsByParentId" column="id"/>
     </resultMap>

    <sql id="Base_Column_List">
      id,name,parentId,deptPath,enabled,isParent
    </sql>

    <select id="getAllDepartmentWithOutChildren" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from department;
    </select>

    <select id="addDepartment" statementType="CALLABLE" useCache="false">
      call addDepartment(#{name,mode=IN,jdbcType=VARCHAR},#{parentId,mode=IN,jdbcType=INTEGER},#{enabled,mode=IN,jdbcType=BOOLEAN},#{result,mode=OUT,jdbcType=INTEGER},#{id,mode=OUT,jdbcType=INTEGER})
    </select>

    <select id="deleteDepartmentById" statementType="CALLABLE" useCache="false">
      call deleteDepartment(#{id,mode=IN,jdbcType=INTEGER},#{result,mode=IN,jdbcType=INTEGER})
    </select>
    
    <select id="getAllDepartmentsByParentId" resultMap="DepartmentWithChildren">
        select * from department where parentId = #{pid}
    </select>

    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from department
        where id = #{id}
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from department
        where id = #{id}
    </delete>

    <insert id="insert" parameterType="com.xust.model.Department">
        insert into department(id,name,parentId,deptPath,enabled,isParent)
        values (#{id},#{name},#{parentId},#{deptPath},#{enabled},#{isParent})
    </insert>

    <insert id="insertSelective" parameterType="com.xust.model.Department">
        insert into department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="parentId != null">
                parentId,
            </if>
            <if test="deptPath != null">
                deptPath,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="isParent != null">
                isParent,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="deptPath != null">
                #{deptPath,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BIT},
            </if>
            <if test="isParent != null">
                #{isParent,jdbcType=BIT},
            </if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.xust.model.Department">
        update department
        set name = #{name},parentId = #{parentId},deptPath = #{deptPath}, enabled = #{enabled},isParent = #{iseParent}
        where id = #{id}
    </update>

    <update id="updateByIdSelective" parameterType="com.xust.model.Department">
        update department
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parentId = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="depPath != null">
                depPath = #{depPath,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=BIT},
            </if>
            <if test="isParent != null">
                isParent = #{isParent,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>