1、spring的控制反转：对象的实例不再通过调用者来创建，而是由spring容器来创建，spring容器负责控制程序之间的关系，而不是由调用者程序代码直接控制，这样控制权由调用者转移到spring容器，控制权发生了反转
2、spring的依赖注入：从spring容器的角度来看，spring容器负责将被依赖对象赋值给调用者的成员变量，相当于为调用者注入它所依赖的实例
3、实现spring控制反转的是spring IoC容器，spring容器的设计主要基于BeanFactory和ApplicationContext接口
4、ApplicationContext接口实例：通过ClassPathXmlApplicationContext创建、通过FileSystemXmlApplicationContext创建、通过Web服务器实例化ApplicationContext容器
5、依赖注入类型：使用构造方法注入、使用属性的setter方法注入（推荐）
